package jspread.core.util;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import jspread.core.db.DeveloperQUID;

/**
 *
 * @author JeanPaul
 */
public class JSPREADWebServiceTool extends javax.swing.JFrame {

    private String encryptionKey = "";
    private DeveloperQUID dquid = null;
    private static final String version = "V0.5";

    /**
     * &
     * Creates new form JSPREADWebServiceTool
     */
    public JSPREADWebServiceTool() throws ClassNotFoundException, SQLException {
        dquid = new DeveloperQUID("sqlserver");
        initComponents();
        this.setVisible(false);

        upDateLabelImgSize();

        Toolkit kit = this.getToolkit();
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice[] gs = ge.getScreenDevices();
        Insets in = kit.getScreenInsets(gs[0].getDefaultConfiguration());

        Dimension d = kit.getScreenSize();
        int max_width = (d.width - in.left - in.right);
        int max_height = (d.height - in.top - in.bottom);
        //this.setSize(Math.min(max_width, 850), Math.min(max_height, 550));//whatever size you want but smaller the insets
        this.setLocation((int) (max_width - this.getWidth()) / 2, (int) (max_height - this.getHeight()) / 2);


        this.repaint();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator9 = new javax.swing.JSeparator();
        tbPane = new javax.swing.JTabbedPane();
        mainPane = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainContent = new javax.swing.JPanel();
        labelImg = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        closeButton2 = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jToolBar3 = new javax.swing.JToolBar();
        newFormButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        closeButton = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        bConnection = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        bEditEK = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        colorearLalala = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        cbDBMS = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miNewForm = new javax.swing.JMenuItem();
        miCloseTab = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        miExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JSpread Form Generator");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        mainContent.setBackground(new java.awt.Color(255, 255, 255));

        labelImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSPREAD/CORE/UTIL/jspreadLogoRedu.png"))); // NOI18N

        javax.swing.GroupLayout mainContentLayout = new javax.swing.GroupLayout(mainContent);
        mainContent.setLayout(mainContentLayout);
        mainContentLayout.setHorizontalGroup(
            mainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelImg, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
        );
        mainContentLayout.setVerticalGroup(
            mainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelImg, javax.swing.GroupLayout.PREFERRED_SIZE, 553, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(mainContent);

        javax.swing.GroupLayout mainPaneLayout = new javax.swing.GroupLayout(mainPane);
        mainPane.setLayout(mainPaneLayout);
        mainPaneLayout.setHorizontalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        mainPaneLayout.setVerticalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        tbPane.addTab("Main Menu", mainPane);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.add(jSeparator1);

        closeButton2.setText("Close Tab");
        closeButton2.setFocusable(false);
        closeButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        closeButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(closeButton2);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);
        jToolBar2.add(jSeparator2);

        jToolBar1.add(jToolBar2);

        jToolBar3.setFloatable(false);
        jToolBar3.setRollover(true);

        newFormButton.setText("New Form");
        newFormButton.setFocusable(false);
        newFormButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newFormButton.setPreferredSize(new java.awt.Dimension(80, 54));
        newFormButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFormButtonActionPerformed(evt);
            }
        });
        jToolBar3.add(newFormButton);
        jToolBar3.add(jSeparator3);

        closeButton.setText("Close Tab");
        closeButton.setFocusable(false);
        closeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        jToolBar3.add(closeButton);
        jToolBar3.add(jSeparator4);

        bConnection.setText("Edit Connection");
        bConnection.setFocusable(false);
        bConnection.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bConnection.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar3.add(bConnection);
        jToolBar3.add(jSeparator6);

        bEditEK.setText("Edit Encryption Key");
        bEditEK.setFocusable(false);
        bEditEK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bEditEK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bEditEK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditEKActionPerformed(evt);
            }
        });
        jToolBar3.add(bEditEK);
        jToolBar3.add(jSeparator10);

        colorearLalala.setText("lalala");
        colorearLalala.setFocusable(false);
        colorearLalala.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        colorearLalala.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        colorearLalala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorearLalalaActionPerformed(evt);
            }
        });
        jToolBar3.add(colorearLalala);
        jToolBar3.add(jSeparator8);

        cbDBMS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select DBMS", "MySQL", "SQLServer", "Oracle", "DB2" }));
        jToolBar3.add(cbDBMS);

        jMenu1.setText("File");

        miNewForm.setText("New Form");
        miNewForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewFormActionPerformed(evt);
            }
        });
        jMenu1.add(miNewForm);

        miCloseTab.setText("Close Tab");
        miCloseTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCloseTabActionPerformed(evt);
            }
        });
        jMenu1.add(miCloseTab);
        jMenu1.add(jSeparator5);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tbPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButton2ActionPerformed
        closeTab();
    }//GEN-LAST:event_closeButton2ActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        closeTab();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void newFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFormButtonActionPerformed
        newTab();
    }//GEN-LAST:event_newFormButtonActionPerformed

    private void colorearLalalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorearLalalaActionPerformed
        //System.out.println("Selected compoment: "+tbPane.getSelectedComponent().getClass());
        //JPanel aux = (JPanel) tbPane.getSelectedComponent();
        //System.out.println("aux: "+aux.getComponent(0).getClass());
        //JPanel aux2 = (JPanel) aux.getComponent(0);
        //System.out.println("aux2: "+aux2.getComponent(0).getClass());

        //System.out.println("1:" + tbPane.getComponentCount());
        //JPanel pane = (JPanel) tbPane.getComponent(tbPane.getComponentCount() - 1);

        JPanel paneI = (JPanel) tbPane.getSelectedComponent();

        //System.out.println("2:" + pane.getComponent(0).getClass());
        //JPanel paneI = (JPanel) pane.getComponent(0);

        //System.out.println("3:" + paneI.getComponent(paneI.getComponentCount() - 1).getClass());
        JScrollPane jsp = (JScrollPane) paneI.getComponent(paneI.getComponentCount() - 1);


        //System.out.println("4:" + jsp.getComponent(0).getClass());
        javax.swing.JViewport jvp = (javax.swing.JViewport) jsp.getComponent(0);


        //System.out.println("5:" + jvp.getComponent(0).getClass());
        JTextPane txtPane = (JTextPane) jvp.getComponent(0);


        DefaultHighlighter.DefaultHighlightPainter highlightPainter =
                //new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);
                //new DefaultHighlighter.DefaultHighlightPainter(Color.CYAN);
                new DefaultHighlighter.DefaultHighlightPainter(Color.LIGHT_GRAY);

        DefaultHighlighter.DefaultHighlightPainter highlightPainter2 =
                //new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);
                new DefaultHighlighter.DefaultHighlightPainter(Color.CYAN);
        //new DefaultHighlighter.DefaultHighlightPainter(Color.LIGHT_GRAY);

        try {
            //textPane.getHighlighter().addHighlight(startPos, endPos, highlightPainter);
            txtPane.getHighlighter().addHighlight(0, 10, highlightPainter);
            txtPane.getHighlighter().addHighlight(11, 30, highlightPainter2);
        } catch (BadLocationException ex) {
            ex.printStackTrace();
        }

        //System.out.println("4:" + jsp.getComponent(jsp.getComponentCount()-1).getClass());

        //javax.swing.JViewport jvp = (javax.swing.JViewport) jsp.getComponent(jsp.getComponentCount() - 1);

        //System.out.println("4:" + jvp.getComponent(pane.getComponentCount() - 1).getClass());
    }//GEN-LAST:event_colorearLalalaActionPerformed

    private void miNewFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewFormActionPerformed
        newTab();
    }//GEN-LAST:event_miNewFormActionPerformed

    private void miCloseTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCloseTabActionPerformed
        closeTab();
    }//GEN-LAST:event_miCloseTabActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_miExitActionPerformed

    private void bEditEKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditEKActionPerformed
        String newEK = JOptionPane.showInputDialog(this, "Insert Encryption Key:", "SET Encryption Key", 3);
        if (newEK != null) {
            encryptionKey = newEK;
        }
    }//GEN-LAST:event_bEditEKActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        upDateLabelImgSize();
    }//GEN-LAST:event_formComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JSPREADWebServiceTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JSPREADWebServiceTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JSPREADWebServiceTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JSPREADWebServiceTool.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    new JSPREADWebServiceTool().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(JSPREADWebServiceTool.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(JSPREADWebServiceTool.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void upDateLabelImgSize() {
        //ImageIcon fot = new ImageIcon(getClass().getResource("/JSPREAD/CORE/UTIL/jspreadLogo.jpg"));
        ImageIcon fot = new ImageIcon(getClass().getResource("/JSPREAD/CORE/UTIL/jspreadLogoRedu.png"));
        Icon icono = new ImageIcon(fot.getImage().getScaledInstance(labelImg.getWidth(), labelImg.getHeight(), Image.SCALE_DEFAULT));
        labelImg.setIcon(icono);
        this.repaint();
    }

    private void closeTab() {
        //System.out.println("" + JOptionPane.showConfirmDialog(mainContent, "Do you really want close this tab?", "Close Tab?", JOptionPane.YES_NO_OPTION));
        //JOptionPane.showInternalConfirmDialog(this, "Do you really want close this tab?");
        //JOptionPane.showMessageDialog(this, tbPane.getSelectedIndex());

        if (JOptionPane.showConfirmDialog(mainContent, "Do you really want close this tab?", "Close Tab?", JOptionPane.YES_NO_OPTION) == 0) {
            tbPane.remove(tbPane.getSelectedIndex());
        }
        if (tbPane.getTabCount() == 0) {
            closeButton.setEnabled(false);
            closeButton2.setEnabled(false);
        }
    }

    private void newTab() {
//        JComboBox action = new javax.swing.JComboBox();
//        action.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Query", "Udpate", "Insert", "Delete"}));

        //System.out.println("" + JOptionPane.showInputDialog(this, "Select an action", "New Form", 1, null, new String[]{"Query", "Udpate", "Insert", "Delete"}, null));

//        String db = JOptionPane.showInputDialog(this, action);
        //String db = JOptionPane.showInputDialog(this, null);

        //String db = JOptionPane.showInternalInputDialog(this, "Insert the table(s) to work", "Insert a Table", 3);
        //showInputDialog(this, null);

        if (cbDBMS.getSelectedItem().toString().equalsIgnoreCase("Select DBMS") == false) {
            String instruction = JOptionPane.showInputDialog(this, "Select an SQL Instruction", "New Form", 3, null, new String[]{"Query", "Update", "Insert", "Delete"}, null).toString();
            String whereClause = JOptionPane.showInputDialog(this, "Insert WHERE Clause:", "Insert a Where", 3);
            if (whereClause == null) {
                whereClause = "";
            }
            String dbNTables = JOptionPane.showInputDialog(this, "Insert the table(s) to work:", "Insert a Table", 3);
            dbNTables = dbNTables.trim();
            if (dbNTables != null && dbNTables.equalsIgnoreCase("") == false) {
                String fromName = JOptionPane.showInputDialog(this, "Name of the form:", "Form Name", 3);
                if (fromName != null && fromName.equalsIgnoreCase("") == false) {
                    String fromAction = JOptionPane.showInputDialog(this, "Action of the form:", "Form Action", 3);
                    if (fromAction != null && fromAction.equalsIgnoreCase("") == false) {
                        HTMLFromGenerator fg = new HTMLFromGenerator();
                        String SQLInstruction = null;
                        String HTMLForm = null;
                        String validateForm = null;
                        LinkedList aux = null;
                        try {
                            //JOptionPane.showMessageDialog(this, "Not Supported yet :P", "Not Supported", 0);
                            //return;
                            if (instruction.equalsIgnoreCase("query")) {
                                aux = fg.geterateSelectForm(dquid, cbDBMS.getSelectedItem().toString(), dbNTables, whereClause, fromName, fromAction, encryptionKey);
                            } else if (instruction.equalsIgnoreCase("update")) {
                                aux = fg.geterateUpDateForm(dquid, cbDBMS.getSelectedItem().toString(), dbNTables, whereClause, fromName, fromAction, encryptionKey);
                            } else if (instruction.equalsIgnoreCase("insert")) {
                                aux = fg.geterateInsertForm(dquid, cbDBMS.getSelectedItem().toString(), dbNTables, whereClause, fromName, fromAction, encryptionKey);
                            } else if (instruction.equalsIgnoreCase("delete")) {
                                JOptionPane.showMessageDialog(this, "Not Supported yet :P", "Not Supported", 0);
                                return;
                            }

                            SQLInstruction = "\n" + (String) aux.get(0) + "\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n";
                            HTMLForm = (String) aux.get(1) + "\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n";
                            validateForm = (String) aux.get(2) + "\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n";

                            JPanel pane4Tab = new javax.swing.JPanel();
                            JScrollPane scroll4Text = new javax.swing.JScrollPane();
                            JTextPane txtPane = new javax.swing.JTextPane();

                            txtPane.addKeyListener(new java.awt.event.KeyAdapter() {

                                @Override
                                public void keyReleased(java.awt.event.KeyEvent evt) {
                                    tabHotKey(evt);
                                }
                            });

                            scroll4Text.setViewportView(txtPane);

                            javax.swing.GroupLayout pane4TabLayout = new javax.swing.GroupLayout(pane4Tab);
                            pane4Tab.setLayout(pane4TabLayout);
                            pane4TabLayout.setHorizontalGroup(
                                    pane4TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(scroll4Text, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE));
                            pane4TabLayout.setVerticalGroup(
                                    pane4TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(scroll4Text, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE));

                            tbPane.addTab(instruction + "_" + dbNTables, pane4Tab);
                            tbPane.setSelectedIndex(tbPane.getTabCount() - 1);

                            if (tbPane.getTabCount() > 0) {
                                closeButton.setEnabled(true);
                            }


                            StyledDocument doc = (StyledDocument) txtPane.getDocument();



                            // Create a style object and then set the style attributes
                            Style SQLInstructionStyle = doc.addStyle("SQLInstructionStyle", null);
                            // Italic
                            //StyleConstants.setItalic(SQLInstructionStyle, true);
                            // Bold
                            //StyleConstants.setBold(SQLInstructionStyle, true);
                            // Font family
                            StyleConstants.setFontFamily(SQLInstructionStyle, "Consolas");
                            // Font size
                            StyleConstants.setFontSize(SQLInstructionStyle, 12);
                            // Background color
                            StyleConstants.setBackground(SQLInstructionStyle, Color.cyan);
                            // Foreground color
                            StyleConstants.setForeground(SQLInstructionStyle, Color.BLACK);



                            // Create a style object and then set the style attributes
                            Style HTMLFormStyle = doc.addStyle("HTMLFormStyle", null);
                            // Italic
                            //StyleConstants.setItalic(HTMLFormStyle, true);
                            // Bold
                            //StyleConstants.setBold(HTMLFormStyle, true);
                            // Font family
                            StyleConstants.setFontFamily(HTMLFormStyle, "Consolas");
                            // Font size
                            StyleConstants.setFontSize(HTMLFormStyle, 12);
                            // Background color
                            //StyleConstants.setBackground(HTMLFormStyle, Color.blue);
                            StyleConstants.setBackground(HTMLFormStyle, Color.YELLOW);
                            // Foreground color
                            //StyleConstants.setForeground(HTMLFormStyle, Color.white);
                            StyleConstants.setForeground(HTMLFormStyle, Color.BLACK);


                            // Create a style object and then set the style attributes
                            Style validateFormStyle = doc.addStyle("validateFormStyle", null);
                            // Italic
                            //StyleConstants.setItalic(validateFormStyle, true);
                            // Bold
                            //StyleConstants.setBold(validateFormStyle, true);
                            // Font family
                            StyleConstants.setFontFamily(validateFormStyle, "Consolas");
                            // Font size
                            StyleConstants.setFontSize(validateFormStyle, 12);
                            // Background color
                            StyleConstants.setBackground(validateFormStyle, Color.LIGHT_GRAY);
                            // Foreground color
                            StyleConstants.setForeground(validateFormStyle, Color.BLACK);


                            // Append to document
                            doc.insertString(doc.getLength(), SQLInstruction, SQLInstructionStyle);
                            doc.insertString(doc.getLength(), HTMLForm, HTMLFormStyle);
                            doc.insertString(doc.getLength(), validateForm, validateFormStyle);
                            fg = null;
                        } catch (Exception ex) {
                            fg = null;
                            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", 0);
                            ex.printStackTrace();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "The form action can´t be empty", "Error", 0);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "The form name can´t be empty", "Error", 0);
                }
            } else if (dbNTables != null && dbNTables.equalsIgnoreCase("") == true) {
                JOptionPane.showMessageDialog(this, "The table can´t be empty", "Error", 0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select DMBS", "Error", 0);
        }
    }

    private void tabHotKey(java.awt.event.KeyEvent evt) {
        //System.out.println("" + evt.getKeyCode());
        if (evt.isControlDown()) {
            if (evt.getKeyCode() == 78) {
                //n
                newTab();
            } else if (evt.getKeyCode() == 87) {
                //c
                closeTab();
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConnection;
    private javax.swing.JButton bEditEK;
    private javax.swing.JComboBox cbDBMS;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton closeButton2;
    private javax.swing.JButton colorearLalala;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JLabel labelImg;
    private javax.swing.JPanel mainContent;
    private javax.swing.JPanel mainPane;
    private javax.swing.JMenuItem miCloseTab;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miNewForm;
    private javax.swing.JButton newFormButton;
    private javax.swing.JTabbedPane tbPane;
    // End of variables declaration//GEN-END:variables
}
